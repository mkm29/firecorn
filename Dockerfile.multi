FROM python:3.8-alpine as base

LABEL name="Simple blog example using FastAPI, Uvicorn, Orator and Graphene" \
    maintainer="Mitchell Murphy<mitch.murphy@gmail.com>" \
    documentation="https://github.com/mkm29/firecorn" \
    license="GPL-2.0-only"

USER root

FROM base as builder

ENV APP_NAME=firecorn \
    PYTHONFAULTHANDLER=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONHASHSEED=random \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_DEFAULT_TIMEOUT=100 \
    POETRY_VERSION=1.0.0 \
    PATH="/opt/venv/bin:$PATH"

RUN mkdir /install
RUN apk -U update && \
    apk add --no-cache postgresql-dev \
    gcc \
    python3-dev \
    musl-dev \
    libffi-dev \
    libressl-dev \
    cargo

# System deps:
COPY pyproject.toml poetry.lock ${APP_ROOT}/

RUN python -m venv /opt/venv \
    && pip install --upgrade pip \
    && pip install "poetry==$POETRY_VERSION" \
    && poetry config virtualenvs.create false \
    && poetry install $(test "$YOUR_ENV" == production && echo "--no-dev") --no-interaction --no-ansi \
    && chown -R 1001:0 ${APP_ROOT} \
    && chmod -R +w ${APP_ROOT}

FROM base

ARG APP_ROOT=/app

COPY --from=builder /opt/venv /opt/venv
COPY . ${APP_ROOT}
RUN apk -U upgrade && \
    apk --no-cache add libpq ca-certificates && \
    # update-ca-certificate && \
    cd /home && \
    chown -R 1001:0 ${APP_ROOT} && \
    chmod -R +w ${APP_ROOT}
USER 1001
EXPOSE 8080
HEALTHCHECK CMD curl --fail http://localhost:8080 || exit 1
ENV PATH="/opt/venv/bin:$PATH"
CMD ["python", "asgi.py"]
# CMD ["gunicorn", "--bind", "0.0.0.0:8080", "--chdir", "/app", "wsgi"]
